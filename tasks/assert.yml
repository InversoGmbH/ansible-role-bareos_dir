---

- name: assert | Test if bareos_dir_hostname is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_hostname is defined
      - bareos_dir_hostname is string
      - bareos_dir_hostname is not none
    quiet: yes

- name: assert | Test if bareos_dir_password is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_password is defined
      - bareos_dir_password is string
      - bareos_dir_password is not none
    quiet: yes

- name: assert | Test if bareos_dir_queryfile is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_queryfile is defined
      - bareos_dir_queryfile is string
      - bareos_dir_queryfile is not none
    quiet: yes

- name: assert | Test if bareos_dir_max_concurrent_jobs is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_max_concurrent_jobs is defined
      - bareos_dir_max_concurrent_jobs is number
    quiet: yes

- name: assert | Test if bareos_dir_tls_enable is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_tls_enable is defined
      - bareos_dir_tls_enable is boolean
    quiet: yes

- name: assert | Test if bareos_dir_tls_verify_peer is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_tls_verify_peer is defined
      - bareos_dir_tls_verify_peer is boolean
    quiet: yes

- name: assert | Test if bareos_dir_storages is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_storages is iterable
      - bareos_dir_storages is not none
    quiet: yes
  when:
    - bareos_dir_storages is defined

- name: assert | Test if items in bareos_dir_storages are set correctly
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.address is defined
      - item.address is string
      - item.address is not none
      - item.password is defined
      - item.password is string
      - item.password is not none
      - item.device is defined
      - item.device is string
      - item.device is not none
      - item.media_type is defined
      - item.media_type is string
      - item.media_type is not none
      - item.tls_enable is defined
      - item.tls_enable is boolean
      - item.tls_verify_peer is defined
      - item.tls_verify_peer is boolean
    quiet: yes
  loop: "{{ bareos_dir_storages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_storages is defined
- name: assert | Test if bareos_dir_message is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_message is defined
      - bareos_dir_message is string
      - bareos_dir_message is not none
    quiet: yes

- name: assert | Test if bareos_dir_clients is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_clients is iterable
      - bareos_dir_clients is not none
    quiet: yes
  when:
    - bareos_dir_clients is defined

- name: assert | Test if items in bareos_dir_clients are set correctly
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.address is defined
      - item.address is string
      - item.address is not none
      - item.password is defined
      - item.password is string
      - item.password is not none
    quiet: yes
  loop: "{{ bareos_dir_clients }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_clients is defined

- name: assert | Test if tls_enable in bareos_dir_clients is set correctly
  ansible.builtin.assert:
    that:
      - item.tls_enable is boolean
    quiet: yes
  loop: "{{ bareos_dir_clients }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_clients is defined
    - item.tls_enable is defined

- name: assert | Test if tls_verify_peer in bareos_dir_clients is set correctly
  ansible.builtin.assert:
    that:
      - item.tls_verify_peer is boolean
    quiet: yes
  loop: "{{ bareos_dir_clients }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_clients is defined
    - item.tls_verify_peer is defined

- name: assert | Test if bareos_dir_messages is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_messages is iterable
    quiet: yes
  when:
    - bareos_dir_messages is defined

- name: assert | Test if items in bareos_dir_messages are set correctly
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.description is defined
      - item.description is string
      - item.description is not none
    quiet: yes
  loop: "{{ bareos_dir_messages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_messages is defined

- name: assert | Test if item.director in bareos_dir_messages are set correctly
  ansible.builtin.assert:
    that:
      - item.director is mapping
      - item.director.server is defined
      - item.director.server is string
      - item.director.server is not none
      - item.director.messages is defined
      - item.director.messages is iterable
    quiet: yes
  loop: "{{ bareos_dir_messages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_messages is defined
    - item.director is defined

- name: assert | Test if item.append in bareos_dir_messages are set correctly
  ansible.builtin.assert:
    that:
      - item.append is mapping
      - item.append.file is defined
      - item.append.file is string
      - item.append.file is not none
      - item.append.messages is defined
      - item.append.messages is iterable
    quiet: yes
  loop: "{{ bareos_dir_messages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_messages is defined
    - item.append is defined

- name: assert | Test if item.console in bareos_dir_messages are set correctly
  ansible.builtin.assert:
    that:
      - item.console is iterable
    quiet: yes
  loop: "{{ bareos_dir_messages }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_messages is defined
    - item.console is defined

- name: assert | Test if bareos_dir_profiles is set correctly
  ansible.builtin.assert:
    that:
      - bareos_dir_profiles is iterable
      - bareos_dir_profiles is not none
    quiet: yes
  when:
    - bareos_dir_profiles is defined

- name: assert | Test if items in bareos_dir_profiles are set correctly
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.jobacl is defined
      - item.jobacl is iterable
      - item.clientacl is defined
      - item.clientacl is iterable
      - item.storageacl is defined
      - item.storageacl is iterable
      - item.scheduleacl is defined
      - item.scheduleacl is iterable
      - item.poolacl is defined
      - item.poolacl is iterable
      - item.commandacl is defined
      - item.commandacl is iterable
      - item.filesetacl is defined
      - item.filesetacl is iterable
      - item.catalogacl is defined
      - item.catalogacl is iterable
      - item.whereacl is defined
      - item.whereacl is iterable
      - item.pluginoptionsacl is defined
      - item.pluginoptionsacl is iterable
    quiet: yes
  loop: "{{ bareos_dir_profiles }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_profiles is defined

- name: assert | Test if item.append in bareos_dir_profiles are set correctly
  ansible.builtin.assert:
    that:
      - item.append is mapping
    quiet: yes
  loop: "{{ bareos_dir_profiles }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bareos_dir_profiles is defined
    - item.append is defined
